
# Build and run locally
docker build -t user-service:dev .
docker run -p 3011:3011 --env-file .env.development user-service:dev
npm init -y
npm install express body-parser helmet cors express-rate-limit morgan dotenv
npm install --save-dev jest supertest
docker build -t user-service:dev .
docker run -p 3011:3011 --env-file .env.development user-service:dev


docker run -p 3011:3011 --env-file .env.development user-service:dev
npm install sequelize
npm install mysql2         # If using MySQL/MariaDB
npm install pg pg-hstore   # If using PostgreSQL

docker build -t user-service:dev .

docker build -t user-service:dev .
docker run -p 3011:3011 --env-file .env.development user-service:dev
docker build -t user-service:dev . && docker run -p 3011:3011 --env-file .env.development user-service:dev
docker builder prune
docker-compose down
docker-compose up --build

http://localhost:3011/health
npm test
npx jest